{"version":3,"sources":["components/signup/UpdateProfile.js","components/signup/SignUpCustomer.js","ui/input.js","helpers/utils.js","ui/button.js"],"names":["UpdateProfile","setSignUpForm","user","useSelector","state","Auth","useEffect","first_name","last_name","AuthPatient","props","inputChangedHandler","controlName","event","userEmail","email","userMobile","mobile","setState","target","value","mobileExist","postCall","BASE_URL","then","r","invalidMobile","catch","err","response","status","emailExist","er","submitHandler","values","preventDefault","signUpForm","token","axios","post","headers","Authorization","console","log","data","setSession","history","push","toast","success","otp","form_data","formValues","authPatient","sendOTP","switchAuthModeHandler","prevState","isSignup","a","password","showOtp","error","formBtnLabel","this","Fragment","className","id","params","particles","number","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","registerError","Alert","isOpen","onValidSubmit","model","style","display","justifyContent","name","placeholder","autoComplete","onChange","bind","validate","required","minLength","e","FormFeedback","length","pattern","Component","connect","loading","Input","inputElement","elementType","elementClassName","elementConfig","changed","filterLabel","options","map","option","optionKey","label","labelClassName","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","trim","maxLength","isEmail","test","isNumeric"],"mappings":"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","file":"static/js/15.afae5e2b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UpdateProfile = ({ setSignUpForm }) => {\r\n  const user = useSelector((state) => state.Auth.user);\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.first_name == \"\" && user.last_name == \"\") {\r\n        setSignUpForm(true);\r\n      }\r\n    }\r\n  }, [user]);\r\n  return <div></div>;\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { Component } from \"react\";\r\nimport { updateObject, checkValidity } from \"../../helpers/utils\";\r\nimport Input from \"../../ui/input\";\r\nimport Button from \"../../ui/button\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../../assets/scss/login.scss\";\r\nimport { registerUser, authPatient } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\r\nimport { Alert, FormFeedback } from \"reactstrap\";\r\nimport { postCall } from \"../../helpers/axiosUtils\";\r\nimport { BASE_URL } from \"../../helpers/constants\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setSession } from \"../../redux/auth/saga\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport axios from \"axios\";\r\n\r\nclass AuthPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formValues: {\r\n        first_name: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        password: \"\",\r\n        otp: \"\",\r\n      },\r\n      emailExist: false,\r\n\r\n      signUpForm: false,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(\"Component did update\", this.props.user);\r\n  }\r\n\r\n  inputChangedHandler = (controlName, event) => {\r\n    const userEmail = this.props.user ? this.props.user.email : \"\";\r\n    const userMobile = this.props.user ? this.props.user.mobile : \"\";\r\n\r\n    if (controlName === \"mobile\") {\r\n      this.setState({ mobile: event.target.value });\r\n\r\n      if (userMobile == event.target.value) {\r\n        this.setState({ mobileExist: false });\r\n        return;\r\n      }\r\n\r\n      postCall(BASE_URL + `api/common/check-mobile-exist/`, {\r\n        email: event.target.value,\r\n      })\r\n        .then((r) => {\r\n          this.setState({ mobileExist: false });\r\n          this.setState({ invalidMobile: false });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status == 400) {\r\n            this.setState({ mobileExist: true });\r\n            this.setState({ invalidMobile: false });\r\n          }\r\n          if (err.response.status == 500) {\r\n            this.setState({ invalidMobile: true });\r\n          }\r\n        });\r\n    } else {\r\n      if (userEmail == event.target.value) {\r\n        this.setState({ emailExist: false });\r\n        return;\r\n      }\r\n\r\n      postCall(BASE_URL + `api/common/check-email-exist/`, {\r\n        email: event.target.value,\r\n      })\r\n        .then((r) => {\r\n          this.setState({ emailExist: false });\r\n        })\r\n        .catch((er) => {\r\n          this.setState({ emailExist: true });\r\n        });\r\n    }\r\n  };\r\n\r\n  sendOTP(data) {\r\n    postCall(BASE_URL + `api/common/auth-patient/`, data)\r\n      .then((r) => {\r\n        this.setState({ showOtp: true });\r\n        toast.success(\"OTP Sent\");\r\n        console.log(r.data);\r\n      })\r\n      .catch((er) => {\r\n        this.setState({ showOtp: false });\r\n        toast.error(\"Something Went Wrong\");\r\n      });\r\n  }\r\n  submitHandler = (event, values) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.signUpForm) {\r\n      const token = this.props.user.token;\r\n\r\n      if (token) {\r\n        axios\r\n          .post(BASE_URL + `api/users/update-profile/`, values, {\r\n            headers: {\r\n              Authorization: `JWT ${token}`,\r\n            },\r\n          })\r\n          .then((r) => {\r\n            console.log(this.props.user);\r\n\r\n            if (r.status == 200) {\r\n              const user = r.data;\r\n\r\n              setSession(user);\r\n              this.props.history.push(\"/app/dashboard\");\r\n              toast.success(\"User Created Successfully.\");\r\n            }\r\n          });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (values.otp) {\r\n      let form_data = this.state.formValues;\r\n      form_data[\"otp\"] = values.otp;\r\n      console.log(form_data);\r\n      this.props.authPatient(form_data, this.props.history, this.setState);\r\n    } else {\r\n      this.setState({\r\n        formValues: values,\r\n      });\r\n      values[\"create\"] = true;\r\n      this.sendOTP(values);\r\n    }\r\n  };\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isSignup: !prevState.isSignup };\r\n    });\r\n  };\r\n\r\n  setSignUpForm = (a) => {\r\n    this.setState({ signUpForm: true });\r\n  };\r\n  render() {\r\n    let formBtnLabel;\r\n    if (this.state.signUpForm == true) {\r\n      formBtnLabel = \"Sign Up\";\r\n    } else {\r\n      if (this.state.showOtp == true) {\r\n        formBtnLabel = \"Verify OTP\";\r\n      } else {\r\n        formBtnLabel = \"Get OTP\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"position-relative\">\r\n          <Particles\r\n            id=\"particles-js\"\r\n            params={{\r\n              particles: {\r\n                number: {\r\n                  value: 160,\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 800,\r\n                  },\r\n                },\r\n                color: {\r\n                  value: \"#1360ef\",\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                  stroke: {\r\n                    width: 0,\r\n                    color: \"#f94f15\",\r\n                  },\r\n                  polygon: {\r\n                    nb_sides: 5,\r\n                  },\r\n                  image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100,\r\n                  },\r\n                },\r\n                opacity: {\r\n                  value: 1,\r\n                  random: true,\r\n                  anim: {\r\n                    enable: true,\r\n                    speed: 1,\r\n                    opacity_min: 0,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                size: {\r\n                  value: 3,\r\n                  random: true,\r\n                  anim: {\r\n                    enable: false,\r\n                    speed: 4,\r\n                    size_min: 0.3,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                line_linked: {\r\n                  enable: false,\r\n                  distance: 150,\r\n                  color: \"#ffffff\",\r\n                  opacity: 0.4,\r\n                  width: 1,\r\n                },\r\n                move: {\r\n                  enable: true,\r\n                  speed: 1,\r\n                  direction: \"none\",\r\n                  random: true,\r\n                  straight: false,\r\n                  out_mode: \"out\",\r\n                  bounce: false,\r\n                  attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 600,\r\n                  },\r\n                },\r\n              },\r\n              interactivity: {\r\n                detect_on: \"canvas\",\r\n                events: {\r\n                  onhover: {\r\n                    enable: true,\r\n                    mode: \"bubble\",\r\n                  },\r\n                  onclick: {\r\n                    enable: true,\r\n                    mode: \"repulse\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                      opacity: 1,\r\n                    },\r\n                  },\r\n                  bubble: {\r\n                    distance: 250,\r\n                    size: 0,\r\n                    duration: 2,\r\n                    opacity: 0,\r\n                    speed: 3,\r\n                  },\r\n                  repulse: {\r\n                    distance: 400,\r\n                    duration: 0.4,\r\n                  },\r\n                  push: {\r\n                    particles_nb: 4,\r\n                  },\r\n                  remove: {\r\n                    particles_nb: 2,\r\n                  },\r\n                },\r\n              },\r\n              retina_detect: true,\r\n            }}\r\n          />\r\n          <div className=\"container\">\r\n            <div className=\"row  text-center\">\r\n              <div className=\"col\">\r\n                <h1>Sign Up</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {this.props.user && \"he\"}\r\n        <div className=\"page-content\">\r\n          <section className=\"register\">\r\n            <div className=\"container\">\r\n              <div className=\"row justify-content-center text-center\">\r\n                <div className=\"col-lg-8 col-md-12\">\r\n                  <div className=\"mb-6\">\r\n                    {\" \"}\r\n                    <span className=\"badge badge-primary-soft p-2\">\r\n                      <i className=\"la la-exclamation ic-3x rotation\"></i>\r\n                    </span>\r\n                    <h2 className=\"mt-3\">Welcome To MyMedbook</h2>\r\n                    <p className=\"lead\">Enter Your Details...</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-10 ms-auto me-auto\">\r\n                  <div className=\"register-form text-center\">\r\n                    {this.props.registerError && (\r\n                      <Alert\r\n                        color=\"danger\"\r\n                        isOpen={this.props.registerError ? true : false}\r\n                      >\r\n                        <div>{this.props.registerError}</div>\r\n                      </Alert>\r\n                    )}\r\n                    <AvForm\r\n                      onValidSubmit={this.submitHandler}\r\n                      model={this.state.formValues}\r\n                    >\r\n                      {this.state.signUpForm && (\r\n                        <div\r\n                          className=\"row\"\r\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                        >\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"First Name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Last Name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"email\"\r\n                                autoComplete=\"off\"\r\n                                name=\"email\"\r\n                                onChange={this.inputChangedHandler.bind(\r\n                                  this,\r\n                                  \"email\"\r\n                                )}\r\n                                className=\"form-control\"\r\n                                validate={{ email: true }}\r\n                                placeholder=\"Email\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            {this.state.emailExist && (\r\n                              <p className=\"text-danger\">Email already exist</p>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"password\"\r\n                                minLength=\"8\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                  this.setState({\r\n                                    formValues: {\r\n                                      ...this.state.formValues,\r\n                                      password: e.target.value,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <FormFeedback>\r\n                                {8 -\r\n                                  (this.state.formValues.password\r\n                                    ? this.state.formValues.password.length\r\n                                    : 0)}{\" \"}\r\n                                chars left\r\n                              </FormFeedback>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {!this.state.showOtp && this.state.signUpForm === false && (\r\n                        <div\r\n                          className=\"row\"\r\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                        >\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"number\"\r\n                                name=\"mobile\"\r\n                                autoComplete=\"off\"\r\n                                onChange={this.inputChangedHandler.bind(\r\n                                  this,\r\n                                  \"mobile\"\r\n                                )}\r\n                                className=\"form-control\"\r\n                                validate={{ pattern: { value: /^\\d{10}$/ } }}\r\n                                placeholder=\"Mobile\"\r\n                                required\r\n                              />\r\n                              <FormFeedback>\r\n                                {10 -\r\n                                  (this.state.mobile\r\n                                    ? this.state.mobile.length\r\n                                    : 0)}{\" \"}\r\n                                chars left\r\n                              </FormFeedback>\r\n                            </div>\r\n\r\n                            {this.state.mobileExist && (\r\n                              <p className=\"text-danger\">\r\n                                Mobile already exist\r\n                              </p>\r\n                            )}\r\n\r\n                            {this.state.invalidMobile && (\r\n                              <p className=\"text-danger\">\r\n                                Invalid Value for Mobile No.\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <UpdateProfile setSignUpForm={this.setSignUpForm} />\r\n                      {this.state.showOtp && this.state.signUpForm === false && (\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <AvInput\r\n                                type=\"number\"\r\n                                name=\"otp\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Please enter otp\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-text mb-2\">\r\n                              Please enter the otp that you received your\r\n                              registered Mobile\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <input\r\n                            type=\"submit\"\r\n                            // disabled={\r\n                            //   this.state.mobileExist || this.state.emailExist\r\n                            // }\r\n                            value={formBtnLabel}\r\n                            className=\"btn btn-primary\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </AvForm>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const { user, loading, registerError } = state.Auth;\r\n  return { user, loading, registerError };\r\n};\r\nexport default connect(mapStateToProps, { authPatient })(AuthPatient);\r\n","import React from 'react';\n\nconst Input = (props) => {\n    let inputElement = null;\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={props.elementClassName}\n                    value={props.value}\n                    onChange={props.changed}>\n                    <option value={false}>{props.elementConfig.filterLabel}</option>\n                    {props.elementConfig.options.map((option) => (\n                        <option key={option.id} value={option.id}>\n                            {option[props.elementConfig.optionKey]}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={props.className}>\n            {props.label && <label className={props.labelClassName}>{props.label}</label>}\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default Input;","\nexport const updateObject = (oldObject: any, updatedProperties: any) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value:any, rules:any) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}\n","import React from 'react';\n\nconst button = (props:any) => (\n    <button type=\"submit\"\n        disabled={props.disabled}\n        className={props.className}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;"],"sourceRoot":""}